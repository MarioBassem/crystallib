module ${args.name}

import freeflowuniverse.crystallib.osal
import freeflowuniverse.crystallib.core.pathlib
// import freeflowuniverse.crystallib.osal.gittools
import os

^^[params]
pub struct Config {
pub mut:
	name                       string = 'default'
	reset                      bool
	dest                       string = '/data/${args.name}'
	passwd                     string ^^[required]
	postgresql_name            string = 'default'
	domain                     string ^^[required]
	title string
	timezone string = "Africa/Kinshasa"
	mail_from       string ^^[required]
	smtp_addr       string ^^[required]
	smtp_login      string ^^[required]
	smpt_port       int = 587
	smtp_passwd     string ^^[required]	
}

pub fn configure(myargs Config) ! {

	checkplatform()!
	
	dest:=myargs.dest
	if !(os.exists("??{dest}")){
		return error("can't find dest: ??{dest}")
	}

	@for t in template_items
	pathlib.template_write(??tmpl("templates/${t.path}"),
								  "??{dest}/${t.path}",myargs.reset)!
	@end	

	??if debug{println(' - ${args.name} configured properly.')}
}


fn checkplatform() ! {
	myplatform:=osal.platform()
	if !(${args.platform_check_str()}) {
		return error('platform not supported')
	}	

}

