import freeflowuniverse.crystallib.data.actionparser  {ActionsArgs, Actions}
import freeflowuniverse.crystallib.data.paramsparser  {Params}

__global(
	actor_factory map[string]shared ExampleActor
)

// PlayConfig. If actions are provided runs actions. Otherwise loads and runs actions in path.
pub struct Play {
	ActionsArgs
	actions []Actions
}

pub fn play(params Play) ! {
	actions := if params.actions.len > 0 {
		ap := actionparser.Actions{
			actions: params.actions
		}
		ap.filtersort(actor: '@actor_name')!
	} else {
		ap := actionparser.new(params.ActionsArgs)!
		ap.filtersort(actor: '@actor_name')!
	}

	for action in actions {
		actor_factory[action.circle].act(action)!
	}
}