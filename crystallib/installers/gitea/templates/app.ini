APP_NAME = ${s.args.name}
RUN_MODE = prod
RUN_USER = git
WORK_PATH = ${s.args.path}

[repository]
ROOT = ${s.args.path}/gitrepo

[repository.local]
LOCAL_COPY_PATH = ${s.args.path}/localrepo

[repository.upload]
TEMP_PATH = ${s.args.path}/uploads

[server]
APP_DATA_PATH = ${s.args.domain}
DOMAIN = ${s.args.domain}
SSH_DOMAIN = ${s.args.domain}
SSH_PORT = 2222
SSH_LISTEN_PORT = 2222
HTTP_PORT = 3000
ROOT_URL = https://${s.args.domain}
DISABLE_SSH = false
LFS_START_SERVER = true
LFS_JWT_SECRET = ${s.args.lfs_jwt_secret}
OFFLINE_MODE = false

[database]
PATH = ${s.args.path}/gitea.db
DB_TYPE = postgres
HOST = localhost:5432
NAME = gitea
USER = root
PASSWD = ${s.args.postgresql_passwd}
LOG_SQL = false
SCHEMA = 
SSL_MODE = disable

[indexer]
ISSUE_INDEXER_PATH = ${s.args.path}/indexers/issues.bleve

[session]
PROVIDER_CONFIG = ${s.args.path}/sessions
PROVIDER = file

[picture]
AVATAR_UPLOAD_PATH = ${s.args.path}/avatars
REPOSITORY_AVATAR_UPLOAD_PATH = ${s.args.path}/repo-avatars

[attachment]
PATH = ${s.args.path}/attachments

[log]
MODE = console
LEVEL = info
ROOT_PATH = ${s.args.path}/log

[security]
INSTALL_LOCK = true
SECRET_KEY = ${s.args.secret_key}
REVERSE_PROXY_LIMIT = 1
REVERSE_PROXY_TRUSTED_PROXIES = *
INTERNAL_TOKEN =  ${s.args.internal_token}
PASSWORD_HASH_ALGO = pbkdf2

[service]
DISABLE_REGISTRATION = false
REQUIRE_SIGNIN_VIEW = false
REGISTER_EMAIL_CONFIRM = false
ENABLE_NOTIFY_MAIL = true
ALLOW_ONLY_EXTERNAL_REGISTRATION = false
ENABLE_CAPTCHA = false
DEFAULT_KEEP_EMAIL_PRIVATE = false
DEFAULT_ALLOW_CREATE_ORGANIZATION = true
DEFAULT_ENABLE_TIMETRACKING = true
NO_REPLY_ADDRESS = noreply.localhost

[lfs]
PATH = ${s.args.path}/lfs

[mailer]
ENABLED        = true
FROM           = ${s.args.mail_from}
; PROTOCOL       = smtps
SMTP_ADDR      = ${s.args.smtp_addr}
SMTP_PORT      = ${s.args.smpt_port}
USER           = ${s.args.smtp_login}
PASSWD         = ${s.args.smtp_passwd}

[openid]
ENABLE_OPENID_SIGNIN = true
ENABLE_OPENID_SIGNUP = true

[cron.update_checker]
ENABLED = false

[repository.pull-request]
DEFAULT_MERGE_STYLE = merge

[repository.signing]
DEFAULT_TRUST_MODEL = committer

[oauth2]
JWT_SECRET = ${s.args.jwt_secret}
